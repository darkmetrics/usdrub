library(tidyverse)
library(tidyverse)
library(gridExtra) # Arrangning ggplots
library(readr)     # Loading data
library(readxl)    # Loading excel
library(zoo) # временные ряды
library(forecast)
library(urca)
library(vars)
library(haven)
setwd('D:/Users/Vladimir/Desktop/Github/usdrub/code/enders')
install.packages("sas7bdat")
rates <- sas7bdat::read.sas7bdat('quarterly.sas7bdat')
ls
ls -al
list.files()
setwd('D:/Users/Vladimir/Desktop/Github/usdrub/code/enders')
list.files()
getwd()
setwd('D:/Users/Vladimir/Desktop/Github/usdrub/code/enders')
getwd()
list.files()
rates <- sas7bdat::read.sas7bdat('data/quarterly.sas7bdat')
glimpse(rates)
rates <- rates[, c('Tbill', 'r10')]
head(rates)
# методология Энгла-Грейнджера: линейная регрессия
lm_coint <- lm(r0 ~ Tbill, data=rates)
# методология Энгла-Грейнджера: линейная регрессия
lm_coint <- lm(r10 ~ Tbill, data=rates)
summary(lm_coint)
glimpse(rates)
summary(lm_coint)
# методология Энгла-Грейнджера: линейная регрессия
lm_coint <- lm(Tbill ~ r10, data=rates)
summary(lm_coint)
# методология Энгла-Грейнджера: линейная регрессия
lm_coint <- lm(r10 ~ Tbill, data=rates)
summary(lm_coint)
plot(1:nrow(rates), rates$r10, type='l', col='gray',
main='Динамика 3 рядов', xlab='Время', ylab='Значение ряда',
)
lines(1:nrow(rates), rates$Tbill, type='p',
cex=0.5, pch=24, bg='gray', col='darkgrey')
plot(1:nrow(rates), rates$r10, type='l', col='gray',
main='Динамика 3 рядов', xlab='Время', ylab='Значение ряда'
)
lines(1:nrow(rates), rates$Tbill, type='p',
cex=0.5, pch=24, bg='gray', col='darkgrey')
plot(1:nrow(rates), rates$r10, type='l', col='gray',
main='Динамика 3 рядов', xlab='Время', ylab='Значение ряда'
)
lines(1:nrow(rates), rates$Tbill, type='p',
cex=0.5, pch=24, bg='gray', col='darkgrey')
plot(1:nrow(rates), rates$r10, type='l', col='orange',
main='Динамика 3 рядов', xlab='Время', ylab='Значение ряда'
)
lines(1:nrow(rates), rates$r10, type='p',
cex=0.5, pch=24, bg='gray', col='darkgrey')
lines(1:nrow(rates), rates$Tbill, type='p',
cex=0.5, pch=24, bg='gray', col='darkgrey')
lines(1:nrow(rates), rates$Tbill, type='l', col='steelblue')
plot(1:nrow(rates), rates$r10, type='l', col='orange',
main='Динамика короткой и длинной ставок',
xlab='Время', ylab='Значение ряда'
)
lines(1:nrow(rates), rates$r10, type='p',
cex=0.5, pch=24, bg='gray', col='darkorange')
lines(1:nrow(rates), rates$Tbill, type='p',
cex=0.5, pch=24, bg='gray', col='blue')
lines(1:nrow(rates), rates$Tbill, type='l', col='steelblue')
plot(1:nrow(rates), rates$r10, type='l', col='orange',
main='Динамика короткой и длинной ставок',
xlab='Время', ylab='Значение ряда'
)
lines(1:nrow(rates), rates$r10, type='p',
cex=0.5, pch=24, bg='gray', col='darkorange')
lines(1:nrow(rates), rates$Tbill, type='p',
cex=0.5, pch=24, bg='gray', col='blue')
lines(1:nrow(rates), rates$Tbill, type='l', col='steelblue')
lines(1:nrow(rates), rates$r10-rates$Tbill,
type='l', col='grey')
glimpse(rates)
plot(1:nrow(rates), rates$r10, type='l', col='orange',
main='Динамика короткой и длинной ставок',
xlab='Время', ylab='Значение ряда', ylim=c(1,20)
)
lines(1:nrow(rates), rates$r10, type='p',
cex=0.5, pch=24, bg='gray', col='darkorange')
lines(1:nrow(rates), rates$Tbill, type='p',
cex=0.5, pch=24, bg='gray', col='blue')
lines(1:nrow(rates), rates$Tbill, type='l', col='steelblue')
lines(1:nrow(rates), rates$r10-rates$Tbill,
type='l', col='grey')
plot(1:nrow(rates), rates$r10, type='l', col='orange',
main='Динамика короткой и длинной ставок',
xlab='Время', ylab='Значение ряда', ylim=c(-2,15)
)
lines(1:nrow(rates), rates$r10, type='p',
cex=0.5, pch=24, bg='gray', col='darkorange')
lines(1:nrow(rates), rates$Tbill, type='p',
cex=0.5, pch=24, bg='gray', col='blue')
lines(1:nrow(rates), rates$Tbill, type='l', col='steelblue')
lines(1:nrow(rates), rates$r10-rates$Tbill,
type='l', col='grey')
plot(1:nrow(rates), rates$r10, type='l', col='orange',
main='Динамика спреда, короткой и длинной ставок',
xlab='Время', ylab='Значение ряда', ylim=c(-2,15)
)
lines(1:nrow(rates), rates$r10, type='p',
cex=0.5, pch=24, bg='gray', col='darkorange')
lines(1:nrow(rates), rates$Tbill, type='p',
cex=0.5, pch=24, bg='gray', col='blue')
lines(1:nrow(rates), rates$Tbill, type='l', col='steelblue')
lines(1:nrow(rates), rates$r10-rates$Tbill,
type='l', col='grey')
# -------------------------#
# стационарность остатков  #
# -------------------------#
errors_adf <- ur.df(lm_coint$residuals, selectlags = 'AIC')
errors_adf
summary(errors_adf)
# -------------------------#
# стационарность остатков  #
# -------------------------#
plot(1:nrow(rates), lm_coint$residuals, type='l', col='brown')
errors_adf <- ur.df(lm_coint$residuals, selectlags = 'AIC')
summary(errors_adf)
plot(1:nrow(rates), lm_coint$residuals,
type='l', col='brown',
xlab='Время', ylab='Остатки',
main='Остатки из уравнения долгосрочного баланса')
ggplot(data=lm_coint$residuals) + geom_density()
ggplot(data=data.frame(lm_coint$residuals)) + geom_density()
hist(lm_coint$residuals, breaks = 50, color='orange')
hist(lm_coint$residuals, breaks = 50, col='orange')
hist(lm_coint$residuals, breaks = 50, col='orange',
main='Распределение остатков')
hist(lm_coint$residuals, breaks = 30, col='orange',
main='Распределение остатков')
nrows(rates)
nrow(rates)
hist(lm_coint$residuals, breaks = 20, col='orange',
main='Распределение остатков')
head(rates)
coint_data <- cbind(rates, lm_coint$residuals)
colnames(coint_data) <- c('Tbill', 'r10', 'error')
model <- lm(r10 ~ error, data=coint_data)
summary(model)
head(rates)
coint_data[,'Tbill'] <- diff(coint_data[,'Tbill'])
# --------------------#
# модель коинтеграции #
# --------------------#
# добавим первые разности
coint_data <- cbind(diff(rates[,'Tbill']),
diff(rates[,'r10']),
lm_coint$residuals[2:nrow(rates)])
diff(rates[,'Tbill'])
lm_coint$residuals[2:nrow(rates)]
length(lm_coint$residuals[2:nrow(rates)])
coint_data <- cbind(c(
diff(rates[,'Tbill']),
diff(rates[,'r10']),
lm_coint$residuals[2:nrow(rates)])
)
head(rates)
head(coint_data)
nrow(coint_data)
# --------------------#
# модель коинтеграции #
# --------------------#
# добавим первые разности
coint_data <- rbind(c(
diff(rates[,'Tbill']),
diff(rates[,'r10']),
lm_coint$residuals[2:nrow(rates)])
)
nrow(coint_data)
# --------------------#
# модель коинтеграции #
# --------------------#
# добавим первые разности
coint_data <- data.frame(
diff(rates[,'Tbill']),
diff(rates[,'r10']),
lm_coint$residuals[2:nrow(rates)])
head(coint_data)
head(rates)
colnames(coint_data) <- c('Tbill', 'r10', 'error')
?VAR
engle_model <- VAR(coint_data[ ,c('r10', 'Tbill')],
exogen = coint_data[ ,'error'],
type='none')
summary(engle_model)
coint_data <- data.frame(
diff(rates[,'Tbill']),
diff(rates[,'r10']),
lm_coint$residuals[(1:nrow(rates)-1)])
colnames(coint_data) <- c('Tbill', 'r10', 'error')
engle_model <- VAR(coint_data[ ,c('r10', 'Tbill')],
exogen = coint_data[ ,'error'],
type='none')
summary(engle_model)
# --------------------#
# модель коинтеграции #
# --------------------#
# добавим первые разности
coint_data <- data.frame(
diff(rates[,'Tbill']),
diff(rates[,'r10']),
lm_coint$residuals[(1:nrow(rates))])
coint_data <- data.frame(
diff(rates[,'Tbill']),
diff(rates[,'r10']),
lm_coint$residuals[(2:nrow(rates))])
colnames(coint_data) <- c('Tbill', 'r10', 'error')
engle_model <- VAR(coint_data[ ,c('r10', 'Tbill')],
exogen = coint_data[ ,'error'],
type='none')
summary(engle_model)
coint_data <- data.frame(
diff(rates[,'Tbill']),
diff(rates[,'r10']),
lm_coint$residuals[(1:nrow(rates))-1])
colnames(coint_data) <- c('Tbill', 'r10', 'error')
engle_model <- VAR(coint_data[ ,c('r10', 'Tbill')],
exogen = coint_data[ ,'error'],
type='none')
summary(engle_model)
# сначала выберем лаг с помощью VAR
lag_var <- VARselect(rates, type='const', lag.max = 10)
lag
lag_var
head(rates)
?ca.jo
# для простоты выберем один лаг
# проведем trace test и max test
# проведем тест на коинтеграцию (lambda trace)
jo.ci = ca.jo(rates,type="trace", K=1)
# для простоты выберем один лаг
# проведем trace test и max test
# проведем тест на коинтеграцию (lambda trace)
jo.ci = ca.jo(rates,type="trace", K=2)
summary(jo.ci)
# проведем тест на коинтеграцию (lambda max)
lambda_max <- ca.jo(rates,type="eigen", K=1)
# проведем тест на коинтеграцию (lambda max)
lambda_max <- ca.jo(rates,type="eigen", K=2)
summary(lambda_max)
# сами собственные значения матрицы
jo.ci@lambda
summary(lambda_max)
install.packages(tsDyn)
install.packages("tsDyn")
library(tsDyn) # отличная библиотека для VECM
?VECM
# собственно сама модель
VECM_tsDyn <- VECM(rates, lag=1, r=1,
estim = "ML",
LRinclude = "none")
summary(VECM_tsDyn)
VECM_tsDyn
plot(VECM_tsDyn)
plot(VECM_tsDyn$residuals)
checkresiduals(VECM_tsDyn$residuals)
summary(VECM_tsDyn)
fevd(VECM_tsDyn, n.ahead=12)
plot(fevd(VECM_tsDyn, n.ahead=12))
summary(VECM_tsDyn)
# собственно сама модель
VECM_tsDyn <- VECM(rates, lag=1, r=1,
estim = "ML",
LRinclude = "const")
# собственно сама модель
VECM_tsDyn <- VECM(rates, lag=1, r=1,
estim = "ML",
include = "const")
summary(VECM_tsDyn)
# собственно сама модель
VECM_tsDyn <- VECM(rates, lag=1, r=1,
estim = "ML",
include = "none")
summary(VECM_tsDyn)
# собственно сама модель
VECM_tsDyn <- VECM(rates, lag=1, r=1,
estim = "ML",
include = "const")
summary(VECM_tsDyn)
str(VECM_tsDyn)
toLatex(VECM_tsDyn)
